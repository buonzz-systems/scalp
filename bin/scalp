#!/usr/bin/env php
<?php

//error_reporting(E_ALL);

$files = array(
  __DIR__ . '/../../vendor/autoload.php',
  __DIR__ . '/../../../../autoload.php',
  __DIR__ . '/../../../autoload.php',
  '../vendor/autoload.php',
  'vendor/autoload.php',  
);

foreach ($files as $file) {
    if (file_exists($file)) {
        require $file;

        define('SCALP_COMPOSER_INSTALL', $file);

        break;
    }
}

if (!defined('SCALP_COMPOSER_INSTALL')) {
    die(
      'You need to set up the project dependencies using the following commands:' . PHP_EOL .
      'curl -s http://getcomposer.org/installer | php' . PHP_EOL .
      'php composer.phar install' . PHP_EOL
    );
}



use Buonzz\Scalp\Commands\ElasticSearch\IndexCommand;
use Buonzz\Scalp\Commands\ElasticSearch\DeleteIndexCommand;
use Buonzz\Scalp\Commands\ElasticSearch\SearchIndexCommand;
use Buonzz\Scalp\Commands\Metadata\AnalyzeCommand;
use Buonzz\Scalp\Commands\Thumb\CreateThumbnailCommand;
use Buonzz\Scalp\Commands\Thumb\SaveThumbnailsCommand;
use Dotenv\Dotenv;

use Symfony\Component\Console\Application;



// defuaults
$config_items = array('DB_HOSTNAME' => 'localhost', 
                        'DB_NAME' => 'metadata',
                        'DB_USER' => 'null',
                        'DB_USER' => 'null',
                        'DOC_TYPE' => 'files',
                        'DB_PORT' => 9200,
                        'DB_USER' => 'null',
                        'INPUT_FOLDER' => './',
                        'OUTPUT_FOLDER' => 'dist',
                        'LOG_FOLDER' => './',
                        'DB_SHARDS' => 1,
                        'DB_REPLICAS' => 1,
                        'THUMB_PERCENT_RESIZE' => 10
                        );


try{

  $dotenv = new Dotenv(getcwd());
  $dotenv->load();

  foreach($config_items as $k=>$v){
    if(getenv($k) === FALSE)
        putenv($k . '=' . $v);
  }

}catch(\Dotenv\Exception\InvalidPathException $e)
{
  foreach($config_items as $k=>$v)
        putenv($k . '=' . $v);
}

// set default command
$command = new IndexCommand();


$application = new Application("Scalp Metadata Extraction Tool by Darwin Biler", "v2.0.4");
$application->add(new IndexCommand);
$application->add(new DeleteIndexCommand);
$application->add(new SearchIndexCommand);
$application->add(new AnalyzeCommand);
$application->add(new CreateThumbnailCommand);
$application->add(new SaveThumbnailsCommand);

$application->setDefaultCommand($command->getName());

$application->run();
